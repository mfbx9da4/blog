/*! blog 2014-01-23 */
window.App=Ember.Application.create(),App.Router.map(function(){this.resource("posts",function(){this.resource("post",{path:"/:post_id"},function(){this.route("edit")}),this.route("create")}),this.resource("cv-portugues")}),DS.Store.create({revision:12,adapter:DS.RESTAdapter.create({namespace:"",serializer:DS.RESTSerializer.extend({primaryKey:function(){return"_id"},serializeId:function(a){return a.toString()}})})}),App.PostController=Ember.ObjectController.extend({deleteMode:!1,actions:{"delete":function(){this.toggleProperty("deleteMode")},cancelDelete:function(){this.set("deleteMode",!1)},confirmDelete:function(){this.get("model").deleteRecord(),this.get("model").save(),this.transitionToRoute("posts"),this.set("deleteMode",!1)},edit:function(){this.transitionToRoute("post.edit")}}}),App.PostEditController=Ember.ObjectController.extend({actions:{save:function(){var a=this,b=this.get("model");this.get("model").set("dateModified",new Date),b.save().then(function(c){console.log(c),a.transitionToRoute("post",b)})}}}),App.PostsController=Ember.ArrayController.extend({sortProperties:["id"],sortAscending:!0,postsCount:function(){return this.get("model.length")}.property("@each")}),App.PostsCreateController=Ember.ObjectController.extend({actions:{save:function(){var a=this;this.get("model").set("dateCreated",new Date),this.get("model").set("dateModified",new Date);var b=this.store.createRecord("post",this.get("model"));b.save().then(function(){a.transitionToRoute("post",b)})}}}),Ember.Handlebars.helper("formatDate",function(a){return moment(a).fromNow()}),Ember.Handlebars.helper("formatMarkdown",function(a){return window.converter=new Markdown.Converter,html=window.converter.makeHtml(a),new Handlebars.SafeString(html)}),Ember.Handlebars.helper("aceEditor",function(){setTimeout(function(){var a=ace.edit("editor");a.setTheme("ace/theme/monokai");var b=require("ace/mode/markdown").Mode;a.getSession().setMode(new b);var c=$('textarea[name="editor"]').hide();a.getSession().setValue(c.val()),a.getSession().setUseWrapMode(!0),a.getSession().on("change",function(){c.val(a.getSession().getValue()).trigger("change")})},1)}),App.Post=DS.Model.extend({title:DS.attr("string"),article:DS.attr("string"),dateCreated:DS.attr("date"),dateModified:DS.attr("date")}),App.CVRoute=Ember.Route.extend({}),App.IndexRoute=Ember.Route.extend({redirect:function(){this.transitionTo("posts")}}),App.PostEditRoute=Ember.Route.extend({model:function(){return this.modelFor("post")}}),App.PostRoute=Ember.Route.extend({model:function(a){return this.store.find("post",a.post_id)}}),App.PostsCreateRoute=Ember.Route.extend({model:function(){return Em.Object.create({})},renderTemplate:function(){this.render("post.edit",{controller:"postsCreate"})}}),App.PostsRoute=Ember.Route.extend({model:function(){var a=this.store.find("post");return a}}),App.SidePanelComponent=Em.Component.extend({tagName:"div",classNames:["sidepanel","whatever"],classNameBindings:["isOpen:opened:closed"],isOpen:!1,actions:{toggleSidepanel:function(){this.toggleProperty("isOpen")}},didInsertElement:function(){console.log("here")}});